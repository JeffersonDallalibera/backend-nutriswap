"""Corrigir relacionamento entre Alimento e InformacaoNutricional

Revision ID: 750fac0202bf
Revises: 
Create Date: 2024-09-20 20:12:17.975813

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '750fac0202bf'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('preferencias_usuario')
    op.drop_table('tipo_dieta')
    op.drop_table('post')
    op.drop_table('alimentos')
    op.drop_table('pesquisa_usuario')
    op.drop_table('alimentos_pesquisa')
    op.drop_table('informacoes_nutricionais')



    with op.batch_alter_table('alimento', schema=None) as batch_op:
        batch_op.alter_column('nome',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=200),
               existing_nullable=False)
        batch_op.alter_column('categoria',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               nullable=False)
        batch_op.drop_constraint('alimento_tipo_alimento_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'tipo_alimento', ['tipo_alimento_id'], ['id'], referent_schema='public')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('alimento', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('alimento_tipo_alimento_id_fkey', 'tipo_alimento', ['tipo_alimento_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('categoria',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('nome',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)

    op.create_table('informacoes_nutricionais',
    sa.Column('info_nutricional_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('alimento_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('proteina', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('carboidrato', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('lipidio', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('fibra', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('calorias', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('vitaminac', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('calcio', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('ferro', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('sodio', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['alimento_id'], ['alimento.alimento_id'], name='informacoesnutricionais_id_alimento_fkey'),
    sa.PrimaryKeyConstraint('info_nutricional_id', name='informacoesnutricionais_pkey'),
    sa.UniqueConstraint('alimento_id', name='informacoesnutricionais_id_alimento_key')
    )
    op.create_table('alimentos_pesquisa',
    sa.Column('alimento_pesquisa_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('pesquisa_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('alimento_trocar', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('alimento_selecionado', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['pesquisa_id'], ['pesquisa_usuario.pesquisa_id'], name='alimentos_pesquisa_pesquisa_id_fkey'),
    sa.PrimaryKeyConstraint('alimento_pesquisa_id', name='alimentos_pesquisa_pkey')
    )
    op.create_table('pesquisa_usuario',
    sa.Column('pesquisa_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('data_pesquisa', sa.DATE(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['usuarios.user_id'], name='pesquisa_usuario_user_id_fkey'),
    sa.PrimaryKeyConstraint('pesquisa_id', name='pesquisa_usuario_pkey')
    )
    op.create_table('alimentos',
    sa.Column('alimento_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('categoria', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('descricao', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tipo_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('alimento_id', name='alimentos_pkey')
    )
    op.create_table('post',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='post_pkey')
    )
    op.create_table('tipo_dieta',
    sa.Column('tipo_dieta_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('nome_tipo_dieta', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('tipo_dieta_id', name='tipodieta_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('preferencias_usuario',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('vegetariano', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('intolerante_lactose', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('alergia_nozes', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('alergia_gluten', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('alergia_mariscos', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('preferencia_organico', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('tipo_dieta_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('objetivo_saude', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('necessidades_nutricionais', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('nivel_atividade', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['tipo_dieta_id'], ['tipo_dieta.tipo_dieta_id'], name='userpreferences_tipo_dieta_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['usuarios.user_id'], name='userpreferences_user_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', name='userpreferences_pkey')
    )
    # ### end Alembic commands ###
